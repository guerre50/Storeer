// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["jquery", "underscore", "backbone", "App", "text!templates/drop.html", "models/StoreeModel"], function($, _, Backbone, app, template, StoreeModel) {
    var DropAreaView, _ref;
    return DropAreaView = (function(_super) {
      __extends(DropAreaView, _super);

      function DropAreaView() {
        _ref = DropAreaView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      DropAreaView.prototype.template = _.template(template);

      DropAreaView.prototype.className = 'storeer-visualizer-drop';

      DropAreaView.prototype.initialize = function() {
        _.bindAll(this);
        app.vent.on('drag-start:storee', this.onDragStart);
        app.vent.on('drag-end:storee', this.onDragEnd);
        app.vent.on('requireDrop', this.enable);
        return app.vent.on('freeDrop', this.disable);
      };

      DropAreaView.prototype.events = {
        'drop': 'onDrop',
        'dragenter': 'onDragEnter',
        'dragleave': 'onDragLeave',
        'dragover': 'onDragOver'
      };

      DropAreaView.prototype.enable = function() {
        return this.$el.addClass('enabled');
      };

      DropAreaView.prototype.disable = function() {
        return this.$el.removeClass('enabled');
      };

      DropAreaView.prototype.onDragEnter = function(event) {
        return this.$el.addClass('drag-over');
      };

      DropAreaView.prototype.onDragLeave = function(event) {
        return this.$el.removeClass('drag-over');
      };

      DropAreaView.prototype.onDragOver = function(event) {
        return event.preventDefault();
      };

      DropAreaView.prototype.onDragStart = function(event) {
        return this.$el.addClass('dragging');
      };

      DropAreaView.prototype.onDragEnd = function(event) {
        return this.$el.removeClass('dragging').removeClass('drag-over');
      };

      DropAreaView.prototype.onDrop = function(event) {
        var dataTransfer, files, images, storee, url;
        event = event.originalEvent;
        dataTransfer = event.dataTransfer;
        storee = dataTransfer.getData('storee');
        if (storee) {
          app.vent.trigger('open:storee', new StoreeModel(JSON.parse(storee)));
        }
        url = dataTransfer.getData('text/uri-list');
        if (url) {
          app.vent.trigger('load:url', url);
        }
        files = dataTransfer.files;
        if (files.length > 0) {
          images = [];
          _.each(files, function(img) {
            if (img.type.match('image.*')) {
              return images.push(img);
            }
          });
          app.vent.trigger('load:images', images);
        }
        this.$el.removeClass('dragging').removeClass('drag-over');
        return false;
      };

      return DropAreaView;

    })(Backbone.Marionette.ItemView);
  });

}).call(this);

/*
//@ sourceMappingURL=DropAreaView.map
*/
